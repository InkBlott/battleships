{"version":3,"sources":["components/Board.js","components/GabeInfoTable.js","components/BoardContainer.js","gameLogic/playerFactory.js","gameLogic/shipFactory.js","gameLogic/boardFactory.js","components/App.js","index.js"],"names":["Board","xC","yC","this","props","handler","classes","board","isCpu","className","style","minWidth","width","height","minHeight","map","row","i","col","j","disabled","getDisabled","getClasses","onClick","handleFire","maxWidth","maxHeight","onDrop","e","dropper","onDragOver","preventDefault","React","Component","GameInfoTable","placer","shipsSet","isV","rotate","reset","drag","dataTransfer","setData","target","parentElement","id","getClass","draggable","onDragStart","BoardContainer","setShips","playerBoard","cpuBoard","player","enemyBoard","x","y","receiveAttack","shipFactory","length","lives","fixedLength","shipLength","join","push","boardFactory","isVertical","sunkenShips","Array","fill","val","cells","xCoord","yCoord","ship","free","getLength","mark","checkCellFree","placeShipBorder","shipShotAt","hit","isSunk","renderSunken","len","coordHolder","forEach","Math","floor","random","placeShip","App","humanPlayer","cpuPlayer","useState","cpuBoardMaker","setCpuMaker","playerBoardMaker","setPMaker","turn","start","setStart","setShipsS","fullReset","pBoardHolder","clone","cBoardHolder","droppables","document","getElementsByClassName","clearBoard","setSunkenShips","populateBoard","classList","remove","cpuFire","fire","getSunkenShips","Swal","title","text","customClass","confirmButton","buttonsStyling","confirmButtonText","allowOutsideClick","then","result","isConfirmed","console","log","makeBoard","add","getCells","icon","cancelButton","rotator","setVertical","getVertical","ev","data","getData","shipLen","parseInt","split","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.12a9f20b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Styles.css'\n\nclass Board extends React.Component {\n   \n\n\n    handleFire(xC, yC){ \n        this.props.handler(xC, yC);\n    }\n\n    getClasses(xC, yC) {\n         let classes = ' ';\n         if (this.props.board[xC][yC] === '*'){\n            classes += 'miss noHover';\n         }\n         if (this.props.board[xC][yC] === '!'){\n            classes += 'sunken noHover';\n         }\n         if (this.props.board[xC][yC] === '@'){\n            classes += 'hit noHover';\n         } \n         if (this.props.board[xC][yC] === '#'){\n            classes += 'sunkenBorder noHover';\n         } \n         if (typeof this.props.board[xC][yC] === 'object' && this.props.isCpu === false){\n            classes += 'ship';\n         } \n\n        return classes;\n    \n    }\n\n    getDisabled(xC, yC) {\n        if (this.props.board[xC][yC] === '*' || this.props.board[xC][yC] === '!' || this.props.board[xC][yC] === '@' || this.props.board[xC][yC] === '#'){\n            return true\n        } else return false;\n    }\n\n\n\n    render(){\n\n        \n        return(\n            <div className='col-xs' style= {{minWidth: '424px', width: '424px', height:'400px', minHeight:'400px'}}>\n                {this.props.board.map((row, i) => row.map((col, j) => {\n                    return (\n                        this.props.isCpu ?  \n                        <button disabled={this.getDisabled(i, j)} className={'col boardButton' + this.getClasses(i, j)} onClick={() => this.handleFire(i, j)} style= {{maxWidth :'40px', maxHeight:'40px'}}></button>\n                         :\n                         <button onDrop={(e)=>this.props.dropper(e, i, j)} onDragOver={(e) => e.preventDefault()} className={'col boardButton' + this.getClasses(i, j)}></button>\n                    )\n                }))}\n            </div>\n        )\n    }\n\n\n}\n\nexport default Board;\n","import React from 'react';\nimport '../styles/Styles.css';\n\nexport default function GameInfoTable({placer ,shipsSet, isV, rotate, reset }) {\n\n    function drag(e) {\n        e.dataTransfer.setData('text/plain', e.target.parentElement.id);\n    }\n\n    function getClass() {\n        if (isV) {\n            return ''\n        } else return 'row'\n\n    }\n\n    return (\n\n        <div className='col-md infoContainer d-flex flex-column'>\n            <div className='row subT'>Place your ships:</div>\n\n            <div className='row'>\n                <div id='ShipPlacer0.4' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n\n                </div>\n                <div id='ShipPlacer1.3' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n\n                </div>\n                <div id='ShipPlacer2.3' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n\n                <div id='ShipPlacer3.2' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer4.2' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer5.2' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer6.1' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer7.1' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer8.1' className='col placerContainer'>\n                    <div draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n                <div id='ShipPlacer9.1' className='col placerContainer'>\n                    <div  draggable='true' onDragStart={(e) => drag(e)} className={getClass() + ' blr'}>\n                        <div className={'col boardButton ship placer noHover'}></div>\n                    </div>\n                </div>\n            </div>\n           \n           <div className='row d-flex flex-grow-1 justify-content-end align-items-center flex-column'>\n                <div className='row'>\n                    <button className='col' onClick={ () => {\n                        rotate();\n                    }}>Rotate</button>\n                    <button className='col' onClick={ () => {\n                        reset();\n                    }}>Reset</button>\n                </div>\n                <div className='row'>\n                <button className='col' onClick={ () => {\n                        placer();\n                    }}>Auto-place</button>\n                    <button className='col' onClick={ () => {\n                        shipsSet();\n                    }}>Start Game</button>\n                </div>\n\n           </div>\n            \n        </div>\n\n    )\n}","import Board from './Board';\nimport GameInfoTable from './GabeInfoTable';\n\n\nfunction BoardContainer({placer ,shipsSet ,setShips, reset, playerBoard, cpuBoard,  handler, dropper, isV, rotate}){\n\n\n    return(\n        <div className='row'> \n                <div className='row gy-3' id='mainRow'>\n                    <Board board={playerBoard} isCpu={false} dropper={dropper}/>\n\n                    {shipsSet ?\n                        <Board handler={handler} board={cpuBoard} isCpu={true}/>\n                    :\n                    <GameInfoTable placer={placer} shipsSet={setShips} reset ={reset} isV={isV} rotate={rotate}/>\n                }\n                </div>\n        </div>\n    )\n}\nexport default BoardContainer;","class player {\n    \n    fire(enemyBoard, x, y){\n        enemyBoard.receiveAttack(x, y);\n    }\n\n}\n\nexport {player}","const MAX_LENGTH = 4;\nconst MIN_LENGTH = 1;\n\nclass shipFactory{\n    constructor(length){\n        this.shipLength = this.fixedLength(length)\n    }\n    lives=[];\n    \n    fixedLength = (length) => {\n        if (length > MAX_LENGTH) return MAX_LENGTH;\n        if (length < MIN_LENGTH) return MIN_LENGTH;\n        return length;\n    }\n\n    isSunk() {\n        if (this.lives.join('').length === this.shipLength){\n            return true;\n        } else return false;\n    }\n\n    hit() {\n        if(this.lives.length <= this.shipLength){\n            this.lives.push('x'); \n        }\n                     \n    }\n\n    getLength() {\n        return this.shipLength;\n    }\n    getLives() {\n        return this.lives;\n    }\n}\n\nexport {shipFactory};","import { shipFactory } from \"./shipFactory\";\n\nconst MAX_BOARD = 9;\nconst MIN_BOARD = 0;\n\nclass boardFactory {\n    \n    board = [];\n    isVertical = false;\n    sunkenShips=0;\n\n    setVertical() {\n        this.isVertical = !this.isVertical\n    }\n\n    getVertical() {\n        return this.isVertical;\n    }\n\n    //Creates 10x10 matrix\n    makeBoard() {\n        for(let i=0; i<=9; i++){\n            this.board[i] = new Array(10).fill('~');\n          }\n    }\n\n    getSunkenShips() {\n        return this.sunkenShips;\n    }\n\n    setSunkenShips(val){\n        this.sunkenShips=val;\n    }\n\n    getCells(){\n        let cells=0;\n        for(let i = 0; i <= 9 ; i++){\n            for( let x =0; x<= 9; x++){\n                if(typeof (this.board)[i][x] === \"object\"){\n                    cells = cells+1;\n                }\n            }\n        }\n        return cells;\n    }\n\n    clearBoard(){\n        for(var i=0; i<=9; i++){\n            this.board[i].fill('~');\n          }\n    }\n\n    //checks if empty cell\n    checkCellFree(xCoord, yCoord, ship) {\n        let free = true;\n        if (this.isVertical === false) {\n            for (let i = 0; i < ship.getLength(); i++) {\n                if ((yCoord + i) <= MAX_BOARD) {\n                    if ((this.board[xCoord][yCoord + i] !== '~')) {\n                        free = false;\n                    } \n                }else free = false;\n            }\n        } else if (this.isVertical === true) {\n            for (let i = 0; i < ship.getLength(); i++) {\n                if((xCoord + i) <= MAX_BOARD){\n                    if (this.board[xCoord + i][yCoord] !== '~') {\n                        free = false;\n                    }\n                } else free =false;\n            }\n        }\n        return free;\n    }\n    \n    placeShipBorder(length, xCoord, yCoord, mark) {\n        \n        //Horizontal ship borders\n        if(this.isVertical === false){\n\n            //left border\n            if(yCoord-1 >= MIN_BOARD){\n                this.board[xCoord][yCoord-1] = mark;\n            }\n            //top border\n            if((xCoord-1) >= MIN_BOARD){\n                for(let i=0; i<length; i++){\n                    this.board[xCoord-1][yCoord+i] = mark;\n                }\n            }   \n            //right border\n            if(((yCoord + length))<=MAX_BOARD){\n                this.board[xCoord][((yCoord + length))] = mark;\n            }\n            //bot border\n            if((xCoord+1) <= MAX_BOARD){\n                for(let i=0; i<length; i++){\n                    this.board[xCoord+1][yCoord+i] = mark;\n                }\n            }   \n            //corners:\n            //NW\n            if((xCoord-1 )>=MIN_BOARD && (yCoord-1) >= MIN_BOARD){\n                this.board[xCoord-1][yCoord-1] = mark;\n            }\n            //NE\n            if((xCoord-1 )>=MIN_BOARD && (yCoord+length) <= MAX_BOARD){\n                this.board[xCoord-1][yCoord+length] = mark;\n            }\n            //SW\n            if((xCoord+1 )<=MAX_BOARD && (yCoord-1) >= MIN_BOARD){\n                this.board[xCoord+1][yCoord-1] = mark;\n            }\n            //SE\n            if((xCoord+1 )<=MAX_BOARD && (yCoord+length) <= MAX_BOARD){\n                this.board[xCoord+1][yCoord+length] = mark;\n            }\n        } \n\n        //Vertical ship borders\n        if (this.isVertical === true) {\n            //top border\n            if(xCoord-1 >= MIN_BOARD){\n                this.board[xCoord-1][yCoord] = mark;\n            }\n            //bottom border\n             if(((xCoord + length))<=MAX_BOARD){\n                this.board[(xCoord + length)][yCoord] = mark;\n            }\n            //left border\n            if((yCoord-1) >= MIN_BOARD){\n                for(let i=0; i<length; i++){\n                    this.board[xCoord+i][yCoord-1] = mark;\n                }\n            } \n            //right border\n            if((yCoord+1) <= MAX_BOARD){\n                for(let i=0; i<length; i++){\n                    this.board[xCoord+i][yCoord+1] = mark;\n                }\n            } \n            //corners:\n            //NW\n            if((xCoord-1 )>=MIN_BOARD && (yCoord-1) >= MIN_BOARD){\n                this.board[xCoord-1][yCoord-1] = mark;\n            }\n            //NE\n            if((xCoord-1 )>=MIN_BOARD && (yCoord+1) <= MAX_BOARD){\n                this.board[xCoord-1][yCoord+1] = mark;\n            }\n            //SW\n            if((xCoord+length)<=MAX_BOARD && (yCoord-1) >= MIN_BOARD){\n                this.board[xCoord+length][yCoord-1] = mark;\n            }\n            //SE\n            if((xCoord+length)<=MAX_BOARD && (yCoord+1) <= MAX_BOARD){\n                this.board[xCoord+length][yCoord+1] = mark;\n            }\n            \n\n        }\n    }\n\n    placeShip(ship, xCoord, yCoord) {\n        if(this.isVertical === false){\n            if (this.checkCellFree(xCoord, yCoord, ship)){\n                for(let i=0; i<ship.getLength(); i++){\n                    this.board[xCoord][yCoord + i] = ship;\n                }\n                this.placeShipBorder(ship.getLength(), xCoord, yCoord, 'x');\n            }\n        } else if (this.isVertical === true){\n            if (this.checkCellFree(xCoord, yCoord, ship)){\n                for(let i=0; i<ship.getLength(); i++){\n                    this.board[xCoord+i][yCoord] = ship;\n                }\n                this.placeShipBorder(ship.getLength(), xCoord, yCoord, 'x');\n            }\n        }\n    }\n\n    receiveAttack(xCoord, yCoord){\n        if(typeof (this.board[xCoord][yCoord]) === 'object'){\n            const shipShotAt = this.board[xCoord][yCoord];\n            shipShotAt.hit();\n            this.board[xCoord][yCoord]= '@';\n            if(shipShotAt.isSunk()){   \n                this.renderSunken(xCoord, yCoord);   \n                this.sunkenShips=this.sunkenShips+1;     \n            }\n        }   \n        else if (this.board[xCoord][yCoord] === '#' || this.board[xCoord][yCoord] === '!' || this.board[xCoord][yCoord] === '@' || this.board[xCoord][yCoord] === '*'){\n            return;\n        }\n        else {\n            this.board[xCoord][yCoord] = '*';\n        }\n    }\n\n    //Replaces sunken ships symbols, places a new border around the sunken ship\n    renderSunken(xCoord, yCoord){\n        let len = 1; \n        \n        if(((xCoord+1 <= MAX_BOARD) && ((this.board[xCoord+1][yCoord]) === '@')) || ((xCoord-1 >= MIN_BOARD) && ((this.board[xCoord-1][yCoord]) === '@'))){\n            this.isVertical=true;\n            while(xCoord-1 >= MIN_BOARD && this.board[xCoord-1][yCoord] === '@'){\n                xCoord = xCoord-1;\n            }\n            let coordHolder = xCoord;\n            while(coordHolder+1 <= MAX_BOARD && this.board[coordHolder+1][yCoord] === '@'){\n                coordHolder = coordHolder+1;\n                len = len+1;\n            }\n            this.placeShipBorder(len, xCoord, yCoord, '#');\n            for(let i=0; i<len; i++){\n                this.board[xCoord+i][yCoord] = '!';\n            }\n        }        \n        if(((yCoord-1 >= MIN_BOARD) && ((this.board[xCoord][yCoord-1]) === '@')) || ((yCoord+1 <= MAX_BOARD) && ((this.board[xCoord][yCoord+1]) === '@'))){\n            this.isVertical=false;\n            while( this.board[xCoord][yCoord-1] === '@'){\n                yCoord = yCoord-1;\n            }\n            let coordHolder = yCoord;\n            while( this.board[xCoord][coordHolder+1] === '@'){\n                coordHolder = coordHolder+1;\n                len = len+1;\n            }\n            this.placeShipBorder(len, xCoord, yCoord, '#');\n            for(let i=0; i<len; i++){\n                this.board[xCoord][yCoord+i] = '!';\n            }\n        }\n        else {\n            this.placeShipBorder(len, xCoord, yCoord, '#');\n            this.board[xCoord][yCoord] = '!';\n\n        }  \n\n    }\n\n    populateBoard(){\n        const shipLen = [4,3,3,2,2,2,1,1,1,1];\n        let ship;\n\n        shipLen.forEach(len => {\n            ship = new shipFactory(len);\n            let xCoord;\n            let yCoord;\n\n            if((Math.floor(Math.random()* 2)) === 1) {\n                this.isVertical = true;\n            } else this.isVertical=false;\n\n            if (this.isVertical === false) {\n                do {\n                    xCoord = Math.floor(Math.random()* 10);\n                    yCoord = Math.floor(Math.random()* 10);\n                }\n                while((this.checkCellFree(xCoord, yCoord, ship) === false ));\n                this.placeShip(ship, xCoord, yCoord);                \n            }\n            else if (this.isVertical === true) {\n                do {\n                    xCoord = Math.floor(Math.random()* 10);\n                    yCoord = Math.floor(Math.random()* 10);\n                }\n                while((this.checkCellFree(xCoord, yCoord, ship) === false));\n                this.placeShip(ship, xCoord, yCoord);\n            }\n        })\n    }\n        \n}\n\nexport {boardFactory}","import React, { useState } from 'react'\nimport BoardContainer from './BoardContainer'\nimport { player } from '../gameLogic/playerFactory'\nimport { boardFactory } from '../gameLogic/boardFactory'\nimport {shipFactory} from '../gameLogic/shipFactory'\nimport '../styles/Styles.css'\nimport Swal from 'sweetalert2';\nimport clone from 'lodash/clone';\n\n\nfunction App() {\n    const humanPlayer = new player();\n    const cpuPlayer = new player();\n    const [cpuBoardMaker, setCpuMaker] = useState(new boardFactory());\n    const [playerBoardMaker, setPMaker] = useState(new boardFactory());\n    let turn = true;\n    const [start, setStart] = useState(true);\n    const [shipsSet, setShipsS] = useState(false);\n\n    function startGame() {\n        console.log(playerBoardMaker);\n        cpuBoardMaker.makeBoard();\n        cpuBoardMaker.populateBoard();\n        playerBoardMaker.makeBoard();\n        setStart(!start);\n    }\n\n    function checkWin(sunkShips) {\n        if(sunkShips === 10){\n            Swal.fire({\n                title: 'Congratulations!',\n                text: 'You win',\n                customClass: {\n                    confirmButton: 'swal-btn',                    \n                  },\n                buttonsStyling:false,\n                confirmButtonText:'Play again',\n                width:'auto',\n                allowOutsideClick:false,\n              }).then((result) => {\n                if(result.isConfirmed) {\n                    fullReset();\n                }\n              })\n        }\n    }\n\n    function checkLoss(sunkShips) {\n        if(sunkShips === 10){\n            turn = true;\n\n            Swal.fire({\n                title: 'You loose...',\n                text: 'Your fleet has been destroyed',\n                customClass: {\n                    confirmButton: 'swal-btn',                    \n                  },\n                buttonsStyling:false,\n                confirmButtonText:'Play again',\n                width:'auto',\n                allowOutsideClick:false,\n              }).then((result) => {\n                if(result.isConfirmed) {\n                    fullReset();\n                }\n              })\n        }\n    }\n\n    //Start playing if all ships placed\n    function setShips() {\n        if(playerBoardMaker.getCells() === 20){\n            setShipsS(!shipsSet);    \n        } else {\n            Swal.fire({\n                icon: 'error',\n                text: 'Place your ships first',\n                customClass: {\n                    confirmButton: 'swal-btn',                    \n                    cancelButton: 'swal-btn'\n                  },\n                buttonsStyling:false,\n              })\n        }\n    }\n\n    //auto-placement of player ships\n    function placer() {\n        let pBoardHolder = clone(playerBoardMaker);\n        pBoardHolder.clearBoard();\n        pBoardHolder.populateBoard();\n        let droppables=document.getElementsByClassName('placerContainer');\n        for (let i=0; i<droppables.length; i++){\n            droppables[i].classList.add('invis');\n        }\n        setPMaker(pBoardHolder);\n    }\n    \n\n    //drop ship into board\n    function dropper(ev, xC, yC){\n        ev.preventDefault();\n        let pBoardHolder = clone(playerBoardMaker);\n        if(typeof pBoardHolder.board[xC][yC] !== 'object'){\n            let data = ev.dataTransfer.getData('text/plain');\n            let shipLen = parseInt((data.split('.'))[1]);\n            let ship = new shipFactory(shipLen);\n            pBoardHolder.placeShip(ship, xC, yC);\n            \n            if(pBoardHolder.board[xC][yC] === ship) {\n                document.getElementById(data).classList.add('invis');\n            }\n            setPMaker(pBoardHolder);\n        }\n    }\n\n    //clear player board, display droppables\n    function reset() {\n        let pBoardHolder = clone(playerBoardMaker);\n        let droppables=document.getElementsByClassName('placerContainer');\n        pBoardHolder.clearBoard();\n        for (let i=0; i<droppables.length; i++){\n            droppables[i].classList.remove('invis');\n        }\n        setPMaker(pBoardHolder);\n    }\n\n    //full reset both boards after game over\n    function fullReset() {\n        let pBoardHolder = clone(playerBoardMaker);\n        let cBoardHolder = clone(cpuBoardMaker);\n        let droppables=document.getElementsByClassName('placerContainer');\n        pBoardHolder.clearBoard();\n        pBoardHolder.setSunkenShips(0);\n        cBoardHolder.clearBoard();\n        cBoardHolder.populateBoard();\n        cBoardHolder.setSunkenShips(0);\n        for (let i=0; i<droppables.length; i++){\n            droppables[i].classList.remove('invis');\n        }\n        setPMaker(pBoardHolder);\n        setCpuMaker(cBoardHolder);\n        setShipsS(false);\n    }\n\n\n    //rotate ships for dropping\n    function rotator() {\n        let rotator = clone(playerBoardMaker);\n        rotator.setVertical();\n        setPMaker(rotator);\n    }\n\n    \n\n\n    function handleFire(xC, yC) {\n        let cBoardHolder = clone(cpuBoardMaker);\n        if (typeof cBoardHolder.board[xC][yC] !== 'object') {\n            turn = false;\n        }\n        humanPlayer.fire(cBoardHolder, xC, yC);\n        setCpuMaker(cBoardHolder, checkWin(cBoardHolder.getSunkenShips()));\n        console.log(cpuBoardMaker.getSunkenShips());\n        while (!turn) {\n            cpuFire();\n        }\n    }\n\n    function cpuFire() {\n        let pBoardHolder = clone(playerBoardMaker);\n        let x = Math.floor(Math.random() * 10); \n        let y = Math.floor(Math.random() * 10); \n        while(pBoardHolder.board[x][y] === (('*') || ('!') || ('#') || ('@'))){\n            x = Math.floor(Math.random() * 10); \n            y = Math.floor(Math.random() * 10); \n        }\n        cpuPlayer.fire(pBoardHolder,x ,y);\n        if(pBoardHolder.board[x][y] === '*') turn = true;\n        setPMaker(pBoardHolder, checkLoss(pBoardHolder.getSunkenShips()));\n    }\n\n    return (\n        <div className='container'>\n                <div className='row-xs title'>BATTLESHIPS</div>\n                {start ?\n                    <button className='row startBtn' onClick={() => startGame()}> START</button>\n                    :\n                    <BoardContainer placer={placer} shipsSet={shipsSet} setShips={setShips} reset={reset} rotate={rotator} isV={playerBoardMaker.getVertical()} playerBoard={playerBoardMaker.board} cpuBoard={cpuBoardMaker.board} handler={handleFire} dropper={dropper}/>\n                }\n        </div>\n\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}